#NOP 练功模块

#CLASS vitals READ {./pkg/pkg_vitals.tin};
#CLASS logging READ {./pkg/pkg_logging.tin};
#CLASS datetime READ {./pkg/pkg_datetime.tin};
#CLASS command READ {./pkg/pkg_command.tin};
#CLASS quit READ {./pkg/pkg_quit.tin};
#CLASS remote_control READ {./pkg/pkg_remote_control.tin};
#CLASS const READ {./const.tin};
#CLASS print READ {./pkg/pkg_print.tin};
#CLASS gag READ {./pkg/pkg_gag.tin};
#CLASS math READ {./pkg/pkg_math.tin};
#CLASS food_drink READ {./pkg/pkg_food_drink.tin};

#IF {"$Fight[jiuyang]" == "1"} {
    #CLASS jiuyang READ {./pkg/pkg_jiuyang.tin};
};

#IF {"$Fight[downexp]" == "1"} {
    #CLASS downexp READ {./pkg/pkg_fight_downexp.tin};
};

#VARIABLE {Fight[epoch][start]} {0};

#VARIABLE {MIN_IN_SECOND} {60};
#VARIABLE {MIN_IN_MICRO_SECOND} {60M};

#ALIAS nosh {
    #CLASS surrender READ {./pkg/pkg_surrender.tin};
    AwaitSurrender {nosh_callback};
};

#ALIAS nosh_callback {
    #CLASS surrender KILL;
    drink_eat;
};


#ALIAS {feedback_loop} {

    #LOCAL {hp_percentage} {0};
    #MATH {hp_percentage} {$vitals[气血] * 100 / $vitals[气血_max]};

    #LOCAL time {};
    #FORMAT time {%U};

    #LOCAL {t_total} {0};
    #LOCAL {t_delta} {0};

    #LOCAL {exp} {$vitals[经验]};
    #LOCAL {qn} {$vitals[潜能]};

    #LOCAL {exp_delta} {0};
    #LOCAL {qn_delta} {0};

    #LOCAL {exp_velocity} {0};
    #LOCAL {qn_velocity} {0};

    #LOCAL {exp_mean} {0};
    #LOCAL {qn_mean} {0};

    #IF {"$Fight[epoch][start]" == "0"} {
        #VARIABLE {Fight[character]} {$username};

        #VARIABLE {Fight[epoch]} {
            {start} {$time};
            {last} {$time};
        };

        #VARIABLE {Fight[经验]} {
            {start} {$exp};
            {last} {$exp};
            {velocity} {
                {max} {0};
                {mean} {0};
            };
        };
        #VARIABLE {Fight[潜能]} {
            {start} {$qn};
            {last} {$qn};
            {velocity} {
                {max} {0};
                {mean} {0};
            };
        };
    };

    #ELSEIF {$vitals[饮水] < 30 && "$FoodDrink[tong]" == "0"} {
        food_drink_init;
        #Return {};
    };
    #ELSEIF {$vitals[饮水] < 30} {
        nosh;
        #RETURN {};
    };
    #ELSEIF {"$FoodDrink[pig]" == "1" && $vitals[食物] < 30} {
        nosh;
        #RETURN {};
    };

    #IF {$vitals[气血%] >= 100 && $hp_percentage >= 70 && $vitals[饮水] > 0} {
        fight_npcs;
    };

    #MATH {t_delta} {$time - $Fight[epoch][last]};
    #MATH {t_total} {$time - $Fight[epoch][start]};

    #MATH {exp_delta} {$exp - $Fight[经验][last]};
    #MATH {qn_delta} {$qn - $Fight[潜能][last]};

    #MATH {exp_velocity} {$exp_delta * $MIN_IN_MICRO_SECOND / $t_delta};
    #MATH {qn_velocity} {$qn_delta * $MIN_IN_MICRO_SECOND / $t_delta};

    #MATH {Fight[经验][velocity][mean]} {($exp - $Fight[经验][start]) * $MIN_IN_MICRO_SECOND / $t_total};
    #MATH {Fight[潜能][velocity][mean]} {($qn - $Fight[潜能][start])  * $MIN_IN_MICRO_SECOND / $t_total};

    #NOP #SHOWME {$time, $t_delta, $exp_delta, $exp_velocity, $Fight[经验][velocity][max], @Min{$Fight[经验][velocity][max];$exp_velocity}};

    #VARIABLE {Fight[经验][velocity][max]} {@Max{$Fight[经验][velocity][max];$exp_velocity}};
    #VARIABLE {Fight[潜能][velocity][max]} {@Max{$Fight[潜能][velocity][max];$qn_velocity}};

    #VARIABLE {Fight[epoch][last]} {$time};
    #VARIABLE {Fight[经验][last]} {$exp};
    #VARIABLE {Fight[潜能][last]} {$qn};

    #NOP generate message;
    #LOCAL {duration_in_min} {0};
    #MATH {duration_in_min} {$Fight[duration] / $MIN_IN_MICRO_SECOND};

    #VARIABLE log_msg {经验: $vitals[经验], 潜能, $vitals[潜能]};
    #CAT {log_msg} { 经验增速: $exp_velocity, 最大 $Fight[经验][velocity][max], 平均 $Fight[经验][velocity][mean]};
    #CAT {log_msg} {, 潜能增速: $qn_velocity, 最大 $Fight[潜能][velocity][max], 平均 $Fight[潜能][velocity][mean]};
    #CAT {log_msg} {, 气血: $vitals[气血]/$vitals[气血_max]};
    #CAT {log_msg} {, 内力: $vitals[内力]/$vitals[内力_max]};
    #CAT {log_msg} {, 食物: $vitals[食物]/$vitals[食物_max]};
    #CAT {log_msg} {, 饮水: $vitals[饮水]/$vitals[饮水_max]};

    #IF {$State[downexp_on]} {
        #CAT {log_msg} { State[downexp_on]: On};
    };
    Log {$log_msg} {Info} {./log/fight_@GetDate{}_$username.log};

    #DELAY {0.1} {
        Info {$log_msg};
    };

    #VARIABLE {vitals[hook_downexp]} {1};
};

#ALIAS {fight_npcs} {
    #LOCAL npc_list {$Fight[npc_list]};

    #FOREACH {*npc_list[%*]} {x} {
        #FOREACH {*npc_list[$x][%*]} {i} {
            Cmd {fight $x $npc_list[$x][$i]} {1};
        };
    };
} {5};


#ALIAS {init_fight} {
    #VARIABLE {Fight[epoch][start]} {0};
    Cmd {
        hp;
        food_drink_init;
        enable dodge none;
        enable move none;
    } {3};
};

#ALIAS {fight_start} {
    Info {开始练功};
    Log {开始练功} {Info} {./log/fight_@GetDate{}_$username.log};

    
    init_fight;
    #CLASS safety READ {./pkg/pkg_safety.tin};

    #DELAY 2 {
        drink_eat;
        #DELAY 3 {
            #TICKER {ticker_feedback_loop} {Cmd {hp} {1}} {15};
            #EVENT {VARIABLE UPDATED vitals[last_updated]} {
                feedback_loop;
            };
            Cmd {hp} {1};
        };
    };
}

#ALIAS {stop} {
    #ECHO {暂停练功};
    #UNEVENT {VARIABLE UPDATED vitals[last_updated]};
    #TICKER {ticker_feedback_loop} {Cmd {hp} {1}} {60};
    Cmd {surrender} {1};
    unset no_give;
} {5};

#ACTION {您要将另一个连线中的相同人物赶出去，取而代之吗？} {
    #DELAY {60} {
        no;
    };
};

#ACTION {^( 你摇头晃脑、歪歪斜斜地站都站不稳，眼看就要倒在地上。 )} {
    Cmd {surrender} {1};
    #IF {"$env[last_buffer_dump]" == "" || @GetEpoch{} - $env[last_buffer_dump]  > 60} {
        buffer_dump {fight};
        #VARIABLE {env[last_buffer_dump]} {@Timestamp{}};
    };
};

#ACTION {^%u将%u从背上放了下来，躺在地上。} {
    #LOCAL npc_id {$NPC_NAME_CN_EN[%1]};
    #LOCAL npc_list {$Fight[npc_list]};#LOCAL npc_list {$Fight[npc_list]};
    #IF {"*npc_list[+1]" == "$npc_id"} {
        Log {%0} {LOG} {./log/npc_@GetDate{}_$username.log};
    };
};

#ACTION {^%u慢慢睁开眼睛，清醒了过来。} {
    #LOCAL npc_id {$NPC_NAME_CN_EN[%1]};
    #LOCAL npc_list {$Fight[npc_list]};
    #NOP #ECHO {[DEBUG] match: %1, npc_id: $npc_id, npc_list1: *npc_list[+1]};
    #IF {"*npc_list[+1]" == "$npc_id"} {
        Cmd {surrender} {1};
        #DELAY {3.1} {
            Cmd {hp} {1};
        };
    };
};

#EVENT {VARIABLE UPDATED env[last_reconnect]} {
    do_fight;
} {5};

#FUNCTION CalNpcMsg {
    #LOCAL {msg} {};
    #LOCAL npc_list {$Fight[npc_list]};
    #FOREACH {*npc_list[%*]} {x} {
        #LOCAL m {$x: $npc_list[$x][+1]-$npc_list[$x][-1]};
        #LIST msg ADD $m;
    };
    #LIST msg COLLAPSE {, };
    #RETURN {$msg};
};

#TICKER {ticker_feedback_loop} {Cmd {hp} {1}} {15};

#TICKER {ticker_disclaimer} {Cmd {say @CalNpcMsg{}} {1}} {60};