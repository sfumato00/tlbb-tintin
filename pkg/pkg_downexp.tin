#NOP Downexp module

#CLASS datetime READ {./pkg/pkg_datetime.tin};
#CLASS room READ {./pkg/pkg_room.tin};
#CLASS graph READ {./pkg/pkg_graph.tin};
#CLASS vitals READ {./pkg/pkg_vitals.tin};
#CLASS command READ {./pkg/pkg_command.tin};
#CLASS logging READ {./pkg/pkg_logging.tin};
#CLASS datetime READ {./pkg/pkg_datetime.tin};


#TICKER {ticker_feedback_loop} {Cmd {hp} {1}} {15};

#EVENT {VARIABLE UPDATED env[last_login]} {
    hp;
    #EVENT {VARIABLE UPDATED env[room_updated]} {
        #IF {@_assertRoomExitsKey{驿站 west}} {
            #ECHO {[Debug]: 开始自杀。};
            stop;
            enable dodge duan-steps;
            enable move duan-steps;
            #CLASS safety KILL;
            start_stuck_check;
            Cmd {w;s} {2};
            大理-跳崖;
        };
    };    
} {1};


#ALIAS {move_back_to_fight_room_handler} {
    
    #ECHO {返回战斗地点};
    stop_stuck_check;
    #ECHO {距离返回战斗地点还有 18 秒};
    #DELAY {6} {
        #ECHO {距离返回战斗地点还有 12 秒};
        #DELAY {6} {
            #ECHO {距离返回战斗地点还有 6 秒};
            #DELAY {6} {
                start_stuck_check;
                #CLASS graph READ {./pkg/pkg_graph.tin};
                #EVENT {VARIABLE UPDATED Travel[trip_complete]} {
                    #CLASS graph KILL;
                    init_fight;
                };
                goto {$Fight[room]};
            };
        };
    };
} {5};

#ALIAS {death_handler} {
    #LOCAL {exp_to_erase} {0};
    #IF {"$downexp[target_exp]" != ""} {
        #MATH {exp_to_erase} {$vitals[经验] - $downexp[target_exp]};
    };

    #ECHO {降 $exp_to_erase 经验};
    Cmd {#2 n;e} {3};
    #ECHO {tell qian $exp_to_erase};
    Cmd {
        tell qian $exp_to_erase;
        y;
        #2 w;
        ask $username about 回家;
    } {5};
} {5};

#EVENT {VARIABLE UPDATED vitals[hook_downexp]} {
    #IF {"$state[downexp_on]" == "1"} {
        #RETURN {};
    };
    #IF {$vitals[经验] >= $downexp[threshold_exp]} {
        #ECHO {当前经验 $vitals[经验], 大于 $downexp[threshold_exp]。降经验开始};
        update_state 1;
        quit;
    };
}

#ACTION {^你必须连线十秒后才能离开游戏。$} {
    #delay 2 {quit};
} {1};

#ACTION {^你正忙着呢，暂时无法离开游戏。$} {
    #delay 2 {quit};
} {5};


#ALIAS {大理-跳崖} {
    #ECHO {大理-跳崖-async};
    #5 w;nw;nu;nd;nw;wu;#2 n;nu;#2 w;nw;nu;nw;wu;
    #EVENT {VARIABLE UPDATED env[room_updated]} {
        #SWITCH {"$env[room]"} {
            #CASE {"山路"} {
                #SWITCH {"$env[exits]"} {
                    #CASE {" southdown 和 northup"} {Cmd {nu} {1}};
                    #CASE {" northeast 和 southdown"} {Cmd {climb mountain} {1}};
                    #CASE {" north 和 southdown"} {Cmd {climb mountain} {1}};
                };                
            };
            #CASE {"山顶"} {
                #UNEVENT {VARIABLE UPDATED env[room_updated]};
                Cmd {n;e;n;n;e;e;s;s} {8};
                #EVENT {VARIABLE UPDATED env[room_updated]} {
                    #SWITCH {"$env[room]"} {
                        #CASE {"鬼门关"} {
                            update_state 0;
                            death_handler;
                        };
                        #CASE {"城隍庙"} {
                            update_state 0;
                            #UNEVENT {VARIABLE UPDATED env[room_updated]};
                            Cmd {drink tong} {1};
                            move_back_to_fight_room_handler;
                        };
                    };                    
                };
                #delay {0.2} {
                    Cmd {jump down} {1};
                };
            };                        
        };
    };
    Cmd {nu;wu} {2};
} {1};


#ALIAS {start_stuck_check} {
    #VARIABLE env[maxSecondsAllowedRemainInTheSameRoom] {30};
    
    #REGEXP {%1} {\d+} {
        #VARIABLE env[maxSecondsAllowedRemainInTheSameRoom] {%1};
    };

    #ECHO {<fca>[DEBUG] Start StuckCheck. Maximum allowed duration in a single room is $env[maxSecondsAllowedRemainInTheSameRoom] seconds.};

    #TICKER {ticker_stuck_check} {
        #LOCAL duration_remained_in_room {};
        #MATH duration_remained_in_room {@GetEpoch{} - $env[room_updated]};
    
        #ECHO {在当前房间时间: $duration_remained_in_room 秒。};
        #IF {$duration_remained_in_room > $env[maxSecondsAllowedRemainInTheSameRoom]} {
            quit;
        };
    } {12};
} {5};

#ALIAS {stop_stuck_check} {
    #ECHO {<fca>[DEBUG] StuckCheck Stopped. };
    #UNTICKER {ticker_stuck_check};
} {5};

#ALIAS update_state {
    #CLASS state OPEN;
    #VARIABLE {state[downexp_on]} {%1};
    #CLASS state CLOSE;
    #CLASS state WRITE {./state/state_$username.state};
}