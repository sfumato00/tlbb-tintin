#NOP Downexp module

#CLASS datetime READ {./pkg/pkg_datetime.tin};
#CLASS room READ {./pkg/pkg_room.tin};

#VARIABLE downexp[last_attempt] {0}; #NOP 这个变量的作用是防止在启动降经验模块的过程中卡住。

#ALIAS {返回战斗地点} {
    
    #ECHO {返回战斗地点};
    stop_stuck_check
    #ECHO {距离返回战斗地点还有 18 秒};
    #DELAY {6} {
        #ECHO {距离返回战斗地点还有 12 秒};
        #DELAY {6} {
            #ECHO {距离返回战斗地点还有 6 秒};
            #DELAY {6} {
                start_stuck_check;
                城隍庙-练功房间; #NOP 需要在角色profile里单独设置从城隍庙回到练功房间的路径。
                
            };
        };
    };
} {5};

#ALIAS {你死了} {
    #ECHO {debug: 鬼门关触发};
    #LOCAL {exp_to_erase} {0};
    #IF {$downexp[target_exp]} {
        #MATH {exp_to_erase} {$vitals[经验] - $downexp[target_exp]};
    };

    #ECHO {降 $exp_to_erase 经验};
    鬼门关-黑店;
    #ECHO {tell qian $exp_to_erase};
    tell qian $exp_to_erase;
    y;
    #2 w;
    ask $username about 回家;
} {5};


#EVENT {VARIABLE UPDATED vitals[hook_downexp]} {
    #LOCAL current_epoch {@GetEpoch{}};
    
    #IF {$vitals[经验] >= $downexp[threshold_exp] 
        && ("$downexp[last_attempt]" == "" 
            || @GetEpoch{} - $downexp[last_attempt] >= 120)} {
        #ECHO {当前经验 $vitals[经验], 大于 $downexp[threshold_exp]。降经验开始};
        #VARIABLE {downexp[last_attempt]} {@GetEpoch{}};
        stop;
        quit;
    };
}

#EVENT {VARIABLE UPDATED env[last_login]} {
    #EVENT {VARIABLE UPDATED env[room_updated]} {
        #IF {"$env[room]" == "驿站" && "$env[exits]" == " west"} {
            #UNEVENT {VARIABLE UPDATED env[room_updated]};
            #ECHO {[Debug]: 开始自杀。};
            enable dodge duan-steps;
            enable move duan-steps;
            hp;
            w;s;大理-跳崖;
        };
    };
    start_stuck_check;
};

#ACTION {^你必须连线十秒后才能离开游戏。$} {
    #delay 2 {quit};
} {1};

#ACTION {^你正忙着呢，暂时无法离开游戏。$} {
    #delay 2 {quit};
} {5};


#ALIAS {大理-跳崖} {
    #ECHO {大理-跳崖-async};
    #5 w;nw;nu;nd;nw;wu;#2 n;nu;#2 w;nw;nu;nw;wu;
    #EVENT {VARIABLE UPDATED env[room_updated]} {
        #SWITCH {"$env[room]"} {
            #CASE {"山路"} {
                #SWITCH {"$env[exits]"} {
                    #CASE {" southdown 和 northup"} {cmd {nu}};
                    #CASE {" northeast 和 southdown"} {cmd {climb mountain}};
                    #CASE {" north 和 southdown"} {cmd {climb mountain}};
                };                
            };
            #CASE {"山顶"} {
                #UNEVENT {VARIABLE UPDATED env[room_updated]};
                n;e;n;n;e;e;s;s;
                #EVENT {VARIABLE UPDATED env[room_updated]} {
                    #SWITCH {"$env[room]"} {
                        #CASE {"鬼门关"} {
                            你死了;
                        };
                        #CASE {"城隍庙"} {
                            #UNEVENT {VARIABLE UPDATED env[room_updated]};
                            drink tong;
                            返回战斗地点;
                        };
                    };                    
                };
                #delay {0.2} {
                    jump down;
                };
            };                        
        };
    };
    #delay {0.2} {
        nu;wu;
    };
} {1};


#ALIAS {start_stuck_check} {
    #VARIABLE env[maxSecondsAllowedRemainInTheSameRoom] {30};
    
    #REGEXP {%1} {\d+} {
        #VARIABLE env[maxSecondsAllowedRemainInTheSameRoom] {%1};
    };

    #ECHO {<fca>[DEBUG] Start StuckCheck. Maximum allowed duration in a single room is $env[maxSecondsAllowedRemainInTheSameRoom] seconds.};

    #TICKER {ticker_stuck_check} {
        #LOCAL duration_remained_in_room {};
        #MATH duration_remained_in_room {@GetEpoch{} - $env[room_updated]};
    
        #ECHO {在当前房间时间: $duration_remained_in_room 秒。};
        #IF {$duration_remained_in_room > $env[maxSecondsAllowedRemainInTheSameRoom]} {
            quit;
        };
    } {12};
} {5};

#ALIAS {stop_stuck_check} {
    #ECHO {<fca>[DEBUG] StuckCheck Stopped. };
    #UNTICKER {ticker_stuck_check};
} {5};


#ALIAS {练功-城隍庙-神憩小舍} {
    n;
    #EVENT {VARIABLE UPDATED env[room_updated]} {
        #IF {"$env[room]" == "东安门"} {
            #UNEVENT {VARIABLE UPDATED env[room_updated]};
            #ACTION {^请不要一次输入太多的指令。$} {
                #DELAY 12 {cmd {e}};
            };
            #EVENT {VARIABLE UPDATED env[room_updated]} {
                #IF {"$env[exits]" == " east 和 west"} {
                    #DELAY 0.1 {
                        cmd {e};
                    };
                } {
                    #UNEVENT {VARIABLE UPDATED env[room_updated]};
                    #UNACTION {^请不要一次输入太多的指令。$};
                    #DELAY 12 {
                        se;e;#13 n;
                        cmd {nw;nw;nu;nu;n;nu;n;nu;n;nu;ne;nu};
                        #DELAY 5 {
                            stop_stuck_check;
                            练功;
                        };
                    };            
                };
            };
            cmd {e};
        };
    };
    cmd {e};
} {5};