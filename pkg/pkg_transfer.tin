#NOP 传功模块

#CLASS vitals READ {./pkg/pkg_vitals.tin};
#CLASS datetime READ {./pkg/pkg_datetime.tin};
#CLASS checkbusy READ {./pkg/pkg_checkbusy.tin};
#CLASS utils READ {./pkg/pkg_utils.tin};
#CLASS command READ {./pkg/pkg_command.tin};
#CLASS stats READ {./pkg/pkg_stats.tin};

#VARIABLE {Busy[next_check]} {0};

#EVENT {VARIABLE UPDATED Busy[busy]} {
    #IF {"$Busy[busy]" == "0"} {
        #LOCAL xiqi {@Restore{$vitals[精神];$vitals[精神_max];$xunhuan[min_restore]}};
        #LOCAL yunqi {@RestoreFull{$vitals[气血];$vitals[气血_max];$xunhuan[min_restore]}};

        #IF {$xiqi > 0} {
            Cmd {xiqi $xiqi} {1};
        };

        #IF {$yunqi > 0} {
            Cmd {yunqi $yunqi} {1};
        };
        #IF {$vitals[内力] > $vitals[内力_max]} {
            Cmd {
                #6 {
                    exert transfer $Transfer[t1];
                };
            } {6};
            

            Cmd {dazuo $vitals[气血_max]} {1};
            #VARIABLE {Busy[busy]} {1};
            #MATH Busy[next_check] {@GetEpoch{} + 8};
        };
        #ELSE {
            Cmd {dazuo $vitals[气血_max]};
            #VARIABLE {Busy[busy]} {1};
            #MATH Busy[next_check] {@GetEpoch{} + 8};
        };
    };
}

#TICKER {ticker_checkbusy} {
    #IF {@GetEpoch{} >= $Busy[next_check]} {
        Cmd {hp;dazuo 1} {1};
    };
} {1};


#FUNCTION GetMaximumSafeNeili {
    #Math result {$enables[force] * 3 + $vitals[内力_max]};
    #RETURN {$result};
};

#FUNCTION GetNeededNeili {
    #LOCAL safe_neili {@GetMaximumSafeNeili{}};
    #LOCAL delta {0};
    #MATH delta {$safe_neili - $vitals[内力]};

    #IF {delta < 0} {
        Cmd {yunqi delta} {1};
    };

    #IF {delta > 0} {
        Cmd {dazuo @GetRefresh{}} {1};
    };
}

#FUNCTION GetNeededHp {
    #LOCAL neili_needed {%1};
    #LOCAL v {0};

    #MATH v {$neili_needed * 300 / ($skills[force] + $score[根骨])};
    #RETURN {$v};
}

#ALIAS {stop} {
    Info {关闭传功模块};
    #UNTICKER {ticker_checkbusy};
    #CLASS transfer KILL;
} {5};