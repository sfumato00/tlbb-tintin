#CLASS utils OPEN;

#VARIABLE LOG_DIRECTORY {./log};

#ALIAS {cmd} {
    #VARIABLE {_cmds} {%1};
    #FOREACH {$_cmds} {_last_cmd} {
        #IF {"$_last_cmd" == ""} {
            #CONTINUE;
        };
        #ECHO {输入指令: $_last_cmd};
        $_last_cmd;
        #VARIABLE {env[last_cmd]} {%U};
    };
} {5};

#FUNCTION {Info} {
    #RETURN {@Log{%1;info;$username}};
};

#FUNCTION {Debug} {
    #RETURN {@Log{%1;debug;$username}};
};

#FUNCTION {Error} {
    #RETURN {@Log{%1;error;$username}};
};

#FUNCTION {Log} {
    #LOCAL ts @timestamp{};
    #ECHO {[LOG] %1 $ts};
    #LOCAL filename {$LOG_DIRECTORY};
    #LOCAL msg %1;
    #LOCAL level %2;
    #LOCAL filename %3;
    #LOCAL file_path {};
    #IF {"%2" == ""} {
        #LOCAL msg {[LOG] $msg $ts};
    } {
        #LOCAL msg {[$level] $msg $ts};
    };

    #IF {"$filename" == ""} {
        #LOCAL file_path {$LOG_DIRECTORY/log.log};
    } {
        #LOCAL file_path {$LOG_DIRECTORY/$filename.log};
    };   
    #LINE LOG {$file_path} {$msg};
    #RETURN {$file_path};
};

#FUNCTION ParseFlakyNumber {
    #LOCAL res {0};
    #PARSE {%1} {x} {
        #MATH res {$res * 10 + $x};
    };
    #RETURN {$res};
};

#FUNCTION Max {
    #IF {%1 < %2} {#RETURN {%2};} {#RETURN {%1};};
};

#FUNCTION Min {
    #IF {%1 > %2} {#RETURN {%2};} {#RETURN {%1};};
};

#FUNCTION {Rnd} {#math {result} {1 d (%2 - %1 + 1) + %1 - 1}};

#FUNCTION Restore {
    #LOCAL curr {%1};
    #LOCAL max {%2};
    #LOCAL min_restore {%3};
    #MATH ret {($max - $curr) / $min_restore * 20};
    #RETURN $ret;
};

#FUNCTION RestoreFull {
    #LOCAL curr {%1};
    #LOCAL max {%2};
    #LOCAL min_restore {%3};

    #LOCAL diff {0};
    #LOCAL multiple {0};

    #MATH {diff} {$max - $curr};
    #MATH multiple {$diff / $min_restore};
    #IF {$multiple * $min_restore < $diff} {
        #MATH multiple {$multiple + 1};
    };

    #MATH ret {$multiple * 20};
    #RETURN $ret;
};

#FUNCTION GetTimeAsString {
    #LOCAL ts %1;
    #LOCAL time_str {};
    #format {time_str} {%t} {{%H:%M:%S}{$ts}};
    #RETURN {$time_str};
};

#FUNCTION timestamp {
    #LOCAL utime {};
    #format utime {%U};
	#format result {%t.%m} {%Y-%m-%d %H:%M:%S} {$utime % 1000000 / 100000}
};

#CLASS utils CLOSE;