#NOP learn

#CLASS vitals READ {./pkg/pkg_vitals.tin};
#CLASS stats READ {./pkg/pkg_stats.tin};
#CLASS print READ {./pkg/pkg_print.tin};
#CLASS command READ {./pkg/pkg_command.tin};
#CLASS checkbusy READ {./pkg/pkg_checkbusy.tin};
#CLASS datetime READ {./pkg/pkg_datetime.tin};

#CLASS learn_function READ {./pkg/pkg_learn_function.tin};

#VARIABLE {Busy[next_check]} {0};

#EVENT {VARIABLE UPDATED vitals[last_updated]} {
    feedback_loop_research;
}

#EVENT {VARIABLE UPDATED Busy[busy]} {
    #IF {"$Busy[busy]" == "0"} {
        Cmd {skills;hp} {2};
    };
};


#TICKER {ticker_checkbusy} {
    #IF {@GetEpoch{} >= $Busy[next_check]} {
        Cmd {dazuo 1} {1};
    };
} {1};


#ALIAS {stop} {
    #ECHO {关闭 研究 模块};
    feedback_loop_idle;
    #CLASS research kill;
} {5};

#ALIAS {feedback_loop_research} {

    #IF {$vitals[内力] < $vitals[内力_max] / 2} {
        #LOCAL xiqi {@Restore{$vitals[精神];$vitals[精神_max];$xunhuan[min_restore]}};
        #IF {$xiqi > 0} {
            Cmd {xiqi $xiqi} {1};
        };
        #LOCAL yunqi {@RestoreFull{$vitals[气血];$vitals[气血_max];$xunhuan[min_restore]}};
        #IF {$yunqi > 0} {
            Cmd {yunqi $yunqi} {1};
        };
        Cmd {dazuo $vitals[气血_max]} {1};
        #LOCAL time {@GetEpoch{}};
        #MATH Busy[next_check] {$time + 7};
        #RETURN {};
    };

    #LOCAL xiqi {@RestoreFull{$vitals[精神];$vitals[精神_max];$xunhuan[min_restore]}};
    #LOCAL m {};
    #MATH m {$vitals[精神_max] / 20};
    #LOCAL max_qn_to_spend {};
    #MATH max_qn_to_spend {($vitals[精神_max] / 3 / 5 - 1) * 5};
    
    #IF {$xiqi > 0} {
        Cmd {xiqi $xiqi} {1};
    };

    #VARIABLE skill_to_learn {@GetSkillToLearn{}};
    #LOCAL {sk} {*skill_to_learn[+1]};
    #LOCAL {target_lv} {$skill_to_learn[+1]};

    #ECHO {DEBUG: ================> research skill: $sk, desired level: $target_lv};

    #IF {$skills[$sk][lv] + 1 < $target_lv} {
        Cmd {research $sk $max_qn_to_spend} {1};
        #MATH Busy[next_check] {$time + 1};
        #RETURN {};
    };
    
    #LOCAL min_qn_before_level {@GetMinQnToLevel{$skills[$sk][lv];$skills[$sk][prof];$score[悟性]}};
    #ECHO {DEBUG: ================> m: $m, max_qn_to_spend: $max_qn_to_spend, min_qn_before_level: $min_qn_before_level};

    
    #IF {$min_qn_before_level > $m} {
        Cmd {research $sk $max_qn_to_spend} {1};
        #MATH Busy[next_check] {$time + 1};
    };
    #ELSEIF {$min_qn_before_level > 0} {
        #LOCAL qn_to_spend {};
        #MATH qn_to_spend {$min_qn_before_level * 5};
        Cmd {research $sk $qn_to_spend} {1};
        #MATH Busy[next_check] {$time + 1};
    };
    #ELSE {
        Cmd {research $sk 5} {1};
        #MATH Busy[next_check] {$time + 1};
    };
} {5};


Cmd {score;enable;skills;hp} {1};