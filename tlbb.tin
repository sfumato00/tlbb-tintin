#CONFIG charset GBK1TOUTF8;
#CONFIG history 200;

#ALIAS {connect} {
    #SESSION {$username} {103.10.85.133} {8888};
};

#EVENT {SESSION DISCONNECTED} {
    #IF {"$control[disable_reconnect]" == "y"} {
        #ECHO {'reconnect' is disabled.;};
        #DELAY {60};
        #DELAY {60} {
            command
        };
    } {
        #gts connect;
    }
};

#EVENT {SESSION TIMED OUT} {
    #IF {"$control[disable_reconnect]" == "y"} {
        #ECHO {'reconnect' is disabled.;};
        #DELAY {60} {
            #gts connect;
        };
    } {
        #gts connect;
    }
};

#EVENT {SESSION CONNECTED} {
    #split
};

#nop {login}

#ACTION {^Please input gb or big5:} {gb}

#ACTION {^您的英文名字(新人登录请输入new)：} {
    $username;$password;
}

#ACTION {^您要将另一个连线中的相同人物赶出去，取而代之吗？(y/n)} {#DELAY 30 {n;}};

#ACTION {重新连线完毕。} {
    l;
    score;
    enable;
    hp;

    init_task;
} {5}


#NOP {common}
#ALIAS {log} {
    #LOG APPEND %1;
    #DELAY {%2} {
        #LOG OFF;
    } {5};
};


#ACTION {^%s气血：%s%d/%s%d%s(%s%d%)%s内力：%s%d%s/%s%d%s(%*)} {
    #VAR {vitals[气血]}{%3};
    #VAR {vitals[气血_max]}{%5};
    #VAR {vitals[气血%]}{%8};
    #VAR {vitals[内力]}{%11};
    #VAR {vitals[内力_max]}{%14};
    #VAR {vitals[内力%]}{%16};
};

#ACTION {^%s精神：%s%d/%s%d%s(%s%d%)%s潜力：%s%d%s/%s%d%s(%*)} {
    #VAR {vitals[精神]}{%3};
    #VAR {vitals[精神_max]}{%5};
    #VAR {vitals[精神%]}{%8};
    #VAR {vitals[潜力]}{%11};
    #VAR {vitals[潜力_max]}{%14};
    #VAR {vitals[潜力%]}{%16};
}

#ACTION {^%s食物：%s%d/%s%d%s潜能：%.%d} {
    #VAR {vitals[食物]}{%3};
    #VAR {vitals[食物_max]}{%5};
    #VAR {vitals[潜能]}{%8};
}

#ACTION {^%s饮水：%s%d/%s%d%s经验：%.%d} {
    #VAR {vitals[饮水]}{%3};
    #VAR {vitals[饮水_max]}{%5};
    #VAR {vitals[经验]}{%8};
}

#ACTION {^%s%S%s(%S)%s-%s%S%s%d/%.%d} {
    #VAR {skills[%4]} {%9};
}

#ACTION {^你的「%u」进步了！$} {skills;}


#FUNCTION Restore {
    #LOCAL curr {%1};
    #LOCAL max {%2};
    #LOCAL min_restore {%3};
    #MATH ret {($max - $curr) / $min_restore * 20};
    #RETURN $ret;
};


#FUNCTION RestoreFull {
    #LOCAL curr {%1};
    #LOCAL max {%2};
    #LOCAL min_restore {%3};

    #LOCAL diff {0};
    #LOCAL multiple {0};

    #MATH {diff} {$max - $curr};
    #MATH multiple {$diff / $min_restore};
    #IF {$multiple * $min_restore < $diff} {
        #MATH multiple {$multiple + 1};
    };

    #MATH ret {$multiple * 20};
    #RETURN $ret;
};


#nop 练功模块 

#ALIAS {练功} {
    #SWITCH {"%1"} {

        #CASE {"on"} {
            #ECHO {开启 fight 模块};
            #CLASS fight kill;
            #CLASS fight read {./pkg_fight.tin};
            #TICKER {ticker_feedback_loop} {hp} {15};
            #DELAY {5} {
                hp;
            };
        };

        #CASE {"off"} {
            #ECHO {关闭 fight 模块};
            #CLASS fight kill;
            #TICKER {ticker_feedback_loop} {hp} {15};
            surrender;
        };

        #DEFAULT {
            #ECHO {supported arguments are: on, off};
        };
    };
} {5};


#NOP 降经验
#ALIAS {降经验} {

    #SWITCH {"%1"} {

        #CASE {"on"} {
            #ECHO {开启降经验模块};
            #CLASS downexp kill;
            #CLASS downexp read {./pkg_downexp.tin};
        };

        #CASE {"off"} {
            #ECHO {关闭降经验模块};
            #CLASS downexp kill;
            #CLASS downexp read {./pkg_downexp.tin};
        };

        #DEFAULT {
            #ECHO {supported arguments are: on, off};
        };
    };
} {5};


#NOP 循环

#ALIAS {循环} {
    #SWITCH {"%1"} {
        #CASE {"off"} {
            #ECHO {关闭 循环 模块};
            #CLASS xunhuan kill;
            #UNALIAS {feedback_loop};
            #TICKER {ticker_feedback_loop} {hp} {15};
        };

        #CASE {"师父"} {
            #ECHO {开启 循环 - 师父 模块};
            #CLASS xunhuan kill;
            #CLASS xunhuan read {./pkg_xunhuan.tin};

            #ALIAS {feedback_loop} {
                feedback_loop_master;
            } {5};

            #DELAY {init} {
                #TICKER {ticker_feedback_loop} {hp} {1.6};
                hp;
            } {3};
        };

        #CASE {"学习"} {
            #IF {"%2" == ""} {
                #ECHO {必须指定求教对象};
                #RETURN {必须指定求教对象};
            };

            #ECHO {开启 循环 - 学习 模块};
            #VARIABLE {learn[master]} {%2};

            #CLASS xunhuan kill;
            #CLASS xunhuan read {./pkg_xunhuan.tin};

            #ALIAS {feedback_loop} {
                feedback_loop_learn;
            } {5};

            #DELAY {init} {
                #TICKER {ticker_feedback_loop} {hp} {1.6};
                hp;
            } {3};
        };

        #CASE {"吐纳"} {
            #ECHO {开启 循环 - 吐纳 模块};

            #CLASS xunhuan kill;
            #CLASS xunhuan read {./pkg_xunhuan.tin};

            #ALIAS {feedback_loop} {
                feedback_loop_tuna;
            } {5};

            #DELAY {init} {
                #TICKER {ticker_feedback_loop} {hp} {1.6};
                hp;
            } {3};
        };

        #CASE {"传功"} {
            #IF {"%2" == ""} {
                #ECHO {必须指定传功对象};
                #RETURN {必须指定传功对象};
            };

            #ECHO {开启 循环 - 传功 模块};

            #VARIABLE {chuangong[target]} {%2};
            #CLASS xunhuan kill;
            #CLASS xunhuan read {./pkg_xunhuan.tin};

            #ALIAS {feedback_loop} {
                feedback_loop_xfer;
            } {5};

            #DELAY {init} {
                #TICKER {ticker_feedback_loop} {hp} {1.6};
                hp;
            } {3};
        };

        #DEFAULT {
            #ECHO {unsupported argument.};
        };
    };
} {5};


#ALIAS {cmd} {
    #ECHO {%1};
    #send {%1};
} {5};